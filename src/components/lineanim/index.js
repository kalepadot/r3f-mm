/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef, useState, Suspense, useEffect } from 'react';
import * as THREE from 'three';
import { render } from 'react-dom';
import { Canvas, useFrame, extend, useThree } from '@react-three/fiber';
import { OrbitControls } from '@react-three/drei';
import { useGLTF } from '@react-three/drei';

export function Model(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF('/lockanim4.glb');
  //   const { actions } = useAnimations(animations, group);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Circle" />
        <group name="LongLine" />
        <group name="GP_Layer002" />
        <mesh
          name="GP_Layer"
          castShadow
          receiveShadow
          geometry={nodes.GP_Layer.geometry}
          material={nodes.GP_Layer.material}
        />
        <mesh
          name="GP_Layer001"
          castShadow
          receiveShadow
          geometry={nodes.GP_Layer001.geometry}
          material={nodes.GP_Layer001.material}
        />
      </group>
    </group>
  );
}

export default function App() {
  return (
    <Canvas
      style={{ height: `350px` }}
      shadows
      camera={{ position: [0, 60, 4], fov: -10 }}
    >
      <ambientLight intensity={0.5} />
      <spotLight position={[10, 10, 10]} angle={0.15} penumbra={1} />
      <pointLight position={[-10, -10, -10]} />
      <OrbitControls autoRotate autoRotateSpeed={4} />
      <Suspense fallback={null}>
        <Model />
      </Suspense>
    </Canvas>
  );
}
